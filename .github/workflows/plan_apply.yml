name: Deploy - Terraform Plan & Apply

on:
  pull_request:
    branches: [main]
    paths:
      - "infra/terraform/**"
      - ".github/workflows/plan_apply.yml"
      - "environments/dev/app.auto.tfvars"
  push:
    branches: [main]
    paths:
      - "infra/terraform/**"
      - ".github/workflows/plan_apply.yml"
      - "environments/dev/app.auto.tfvars"
  workflow_dispatch:

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  AWS_ROLE_TO_ASSUME: ${{ secrets.AWS_ROLE_TO_ASSUME }}
  TF_WORKDIR: infra/terraform

permissions:
  id-token: write
  contents: read

concurrency:
  group: deploy-${{ github.ref }}
  cancel-in-progress: true

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # ensure full tree for path checks

      - name: Show repo root contents (quick map)
        run: |
          echo "GITHUB_WORKSPACE=$GITHUB_WORKSPACE"
          pwd
          ls -la
          echo "Top-level dirs:"
          find . -maxdepth 2 -type d -print | sort

      - name: Prove varfiles exist at exact locations (from repo root)
        shell: bash
        run: |
          set -e
          echo "Expecting these files in THIS commit:"
          echo "  1) $GITHUB_WORKSPACE/infra/terraform/environments/dev/dev.tfvars"
          echo "  2) $GITHUB_WORKSPACE/environments/dev/app.auto.tfvars"
          echo

          # hard checks from repo root (absolute paths)
          if [ ! -f "$GITHUB_WORKSPACE/infra/terraform/environments/dev/dev.tfvars" ]; then
            echo "::error::Missing dev.tfvars at infra/terraform/environments/dev/dev.tfvars"
            exit 1
          fi

          if [ ! -f "$GITHUB_WORKSPACE/environments/dev/app.auto.tfvars" ]; then
            echo "::error::Missing app.auto.tfvars at environments/dev/app.auto.tfvars"
            echo "Tip: open this PR branch on GitHub and verify the file exists in that path."
            exit 1
          fi

          # Export absolute paths for later steps
          echo "TFVARS_DEV_ABS=$GITHUB_WORKSPACE/infra/terraform/environments/dev/dev.tfvars" >> $GITHUB_ENV
          echo "TFVARS_APP_ABS=$GITHUB_WORKSPACE/environments/dev/app.auto.tfvars" >> $GITHUB_ENV

          echo "Both varfiles are present."

      - name: Print absolute varfile paths
        run: |
          echo "TFVARS_DEV_ABS=${TFVARS_DEV_ABS}"
          echo "TFVARS_APP_ABS=${TFVARS_APP_ABS}"
          ls -la "${TFVARS_DEV_ABS}"
          ls -la "${TFVARS_APP_ABS}"

      - name: Configure AWS credentials via OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform 1.13.3
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.13.3

      - name: Terraform Init
        working-directory: ${{ env.TF_WORKDIR }}
        run: terraform init -input=false

      - name: Terraform Workspace (dev)
        working-directory: ${{ env.TF_WORKDIR }}
        run: |
          terraform workspace list || true
          terraform workspace select dev || terraform workspace new dev


      - name: Terraform Validate
        working-directory: ${{ env.TF_WORKDIR }}
        run: terraform validate

      - name: Terraform Plan (PR)
        if: github.event_name == 'pull_request'
        working-directory: ${{ env.TF_WORKDIR }}
        run: |
          terraform plan \
            -input=false \
            -out=tfplan.bin \
            -var-file="${TFVARS_DEV_ABS}" \
            -var-file="${TFVARS_APP_ABS}"

      - name: Upload Plan
        if: github.event_name == 'pull_request'
        uses: actions/upload-artifact@v4
        with:
          name: tfplan
          path: infra/terraform/tfplan.bin

      # Change only the Apply step's if:
      - name: Terraform Apply (push to main or manual)
        if: (github.event_name == 'push' && github.ref == 'refs/heads/main') || github.event_name == 'workflow_dispatch'
        working-directory: ${{ env.TF_WORKDIR }}
        run: |
          terraform plan \
          -input=false \
          -out=tfplan.bin \
          -var-file="${TFVARS_DEV_ABS}" \
          -var-file="${TFVARS_APP_ABS}"
          terraform apply -input=false -auto-approve tfplan.bin

