name: Terraform Plan & Apply (ECS Deploy)

on:
  workflow_dispatch:
  pull_request:
    branches: ["main"]
  push:
    branches: ["main"]

permissions:
  contents: read
  pull-requests: write
  id-token: write

env:
  TF_IN_AUTOMATION: "true"
  AWS_REGION: ${{ secrets.AWS_REGION }}
  AWS_ROLE_TO_ASSUME: ${{ secrets.AWS_ROLE_TO_ASSUME }}

jobs:
  plan:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ecs-microservices-deploy/infra/terraform

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials via OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_wrapper: false

      - name: Terraform init (reconfigure)
        run: terraform init -reconfigure

      - name: Select or create workspace
        run: |
          terraform workspace select dev || terraform workspace new dev

      - name: Verify tfvars exists
        run: |
          set -euo pipefail
          TFVARS="$(pwd)/environments/dev/dev.tfvars"
          if [ ! -f "$TFVARS" ]; then
            echo "Expected tfvars not found at: $TFVARS"
            echo "Listing tree for debugging:"
            pwd
            ls -la
            echo "----"
            ls -la environments || true
            echo "----"
            ls -la environments/dev || true
            exit 1
          fi
          echo "TFVARS=$TFVARS" >> "$GITHUB_ENV"

      - name: Terraform fmt & validate
        run: |
          terraform fmt -check
          terraform validate

      - name: Terraform plan
        run: |
          echo "Using tfvars: $TFVARS"
          terraform plan \
            -input=false \
            -var-file="$TFVARS" \
            -out=tfplan

  apply:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ecs-microservices-deploy/infra/terraform

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure AWS credentials via OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_wrapper: false

      - name: Terraform init (reconfigure)
        run: terraform init -reconfigure

      - name: Select workspace
        run: terraform workspace select dev

      - name: Verify tfvars exists
        run: |
          set -euo pipefail
          TFVARS="$(pwd)/environments/dev/dev.tfvars"
          if [ ! -f "$TFVARS" ]; then
            echo "Expected tfvars not found at: $TFVARS"
            echo "Listing tree for debugging:"
            pwd
            ls -la
            echo "----"
            ls -la environments || true
            echo "----"
            ls -la environments/dev || true
            exit 1
          fi
          echo "TFVARS=$TFVARS" >> "$GITHUB_ENV"

      - name: Terraform apply
        run: |
          echo "Using tfvars: $TFVARS"
          terraform plan \
            -input=false \
            -var-file="$TFVARS" \
            -out=tfplan
          terraform apply -input=false -auto-approve tfplan

