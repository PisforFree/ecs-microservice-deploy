name: Deploy - Terraform Plan & Apply

on:
  pull_request:
    branches: [main]
    paths:
      - "infra/terraform/**"
      - ".github/workflows/plan_apply.yml"
  push:
    branches: [main]
    paths:
      - "infra/terraform/**"
      - ".github/workflows/plan_apply.yml"
  workflow_dispatch:

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  AWS_ROLE_TO_ASSUME: ${{ secrets.AWS_ROLE_TO_ASSUME }}
  TF_WORKDIR: infra/terraform
  # Your layout:
  # 1) infra/terraform/environments/dev/dev.tfvars
  # 2) (repo root)/environments/dev/app.auto.tfvars
  TFVARS_DEV: environments/dev/dev.tfvars
  TFVARS_APP: ../environments/dev/app.auto.tfvars

permissions:
  id-token: write
  contents: read

concurrency:
  group: deploy-${{ github.ref }}
  cancel-in-progress: true

jobs:
  terraform:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Show repo root contents
        run: |
          echo "GITHUB_WORKSPACE=$GITHUB_WORKSPACE"
          pwd
          ls -la
          echo "Top-level directories:"
          find . -maxdepth 2 -type d -print | sort

      - name: Show terraform dir contents
        working-directory: ${{ env.TF_WORKDIR }}
        run: |
          pwd
          ls -la
          echo "Terraform subdirs:"
          find . -maxdepth 3 -type d -print | sort

      - name: Inspect root environments/dev (should contain app.auto.tfvars)
        run: |
          echo "Listing repo-root/environments/dev:"
          ls -la environments/dev || echo "repo-root/environments/dev NOT found."

      - name: Search for any app.auto.tfvars in the repo
        run: |
          echo "Searching for app.auto.tfvars anywhere under repo root..."
          FOUND=$(find . -type f -name "app.auto.tfvars" -print | sort || true)
          echo "$FOUND"
          if [ -z "$FOUND" ]; then
            echo "::error::No app.auto.tfvars found anywhere in the repository checkout."
          fi

      - name: Verify var files exist (absolute + relative)
        working-directory: ${{ env.TF_WORKDIR }}
        shell: bash
        run: |
          echo "Expecting:"
          echo " - ${TFVARS_DEV}"
          echo " - ${TFVARS_APP}"
          echo "--- absolute paths:"
          realpath "${TFVARS_DEV}" || true
          realpath "${TFVARS_APP}" || true
          echo "--- test -f:"
          if [ ! -f "${TFVARS_DEV}" ]; then
            echo "::error file=${TFVARS_DEV}::Missing dev.tfvars at ${TF_WORKDIR}/${TFVARS_DEV}"
            exit 1
          fi
          if [ ! -f "${TFVARS_APP}" ]; then
            echo "::error file=${TFVARS_APP}::Missing app.auto.tfvars at ${TF_WORKDIR}/${TFVARS_APP}"
            echo "Hint: it must be committed at repo-root/environments/dev/app.auto.tfvars on this branch."
            exit 1
          fi
          echo "Both var files found."

      - name: Configure AWS credentials via OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform 1.13.3
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.13.3

      - name: Terraform Init
        working-directory: ${{ env.TF_WORKDIR }}
        run: terraform init -input=false

      - name: Terraform Validate
        working-directory: ${{ env.TF_WORKDIR }}
        run: terraform validate

      - name: Terraform Plan (PR)
        if: github.event_name == 'pull_request'
        working-directory: ${{ env.TF_WORKDIR }}
        run: |
          terraform plan \
            -input=false \
            -out=tfplan.bin \
            -var-file="${{ env.TFVARS_DEV }}" \
            -var-file="${{ env.TFVARS_APP }}"

      - name: Upload Plan
        if: github.event_name == 'pull_request'
        uses: actions/upload-artifact@v4
        with:
          name: tfplan
          path: infra/terraform/tfplan.bin

      - name: Terraform Apply (push to main)
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        working-directory: ${{ env.TF_WORKDIR }}
        run: |
          terraform plan \
            -input=false \
            -out=tfplan.bin \
            -var-file="${{ env.TFVARS_DEV }}" \
            -var-file="${{ env.TFVARS_APP }}"
          terraform apply -input=false -auto-approve tfplan.bin
