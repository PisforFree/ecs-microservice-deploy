name: Terraform Plan & Apply (ECS Deploy)

on:
  # allow manual runs from the Actions tab
  workflow_dispatch:

  # run on any PR to main
  pull_request:
    branches: [ "main" ]

  # run on any push to main
  push:
    branches: [ "main" ]


permissions:
  contents: read
  pull-requests: write
  id-token: write

env:
  TF_IN_AUTOMATION: "true"
  AWS_REGION: ${{ secrets.AWS_REGION }}
  AWS_ROLE_TO_ASSUME: ${{ secrets.AWS_ROLE_TO_ASSUME }}

jobs:
  plan:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: infra/terraform
    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS credentials via OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_wrapper: false

      - name: Terraform init (reconfigure)
        run: terraform init -reconfigure

      - name: Select or create workspace
        run: terraform workspace select dev || terraform workspace new dev

      - name: Terraform fmt & validate
        run: |
          terraform fmt -check
          terraform validate

      - name: Terraform plan (no input)
        id: plan
        run: terraform plan -no-color -input=false

      - name: Comment plan on PR
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          header: terraform-plan
          message: |
            ### Terraform Plan (dev)
            ```
            ${{ steps.plan.outputs.stdout }}
            ```
          recreate: true

  apply:
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    environment: dev
    defaults:
      run:
        working-directory: infra/terraform
    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS credentials via OIDC
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_wrapper: false

      - name: Terraform init (reconfigure)
        run: terraform init -reconfigure

      - name: Select workspace
        run: terraform workspace select dev

      - name: Terraform apply (no input)
        run: terraform apply -auto-approve -input=false
